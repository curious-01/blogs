{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","AppBar","props","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","useState","showSidebar","setShowSidebar","Grommet","theme","global","colors","brand","font","family","size","height","full","ResponsiveContext","Consumer","fill","Heading","level","margin","Button","icon","Notification","onClick","flex","overflow","horizontal","Layer","FormClose","Collapsible","open","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAwGeA,MA5Ff,WACE,IAaMC,EAAS,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,aACEC,IAAI,SACJC,UAAU,MACVC,MAAM,SACNC,QAAQ,UACRC,WAAW,QACXC,IAAK,CAAEC,KAAM,SAAUC,MAAO,QAASC,SAAU,SACjDC,UAAU,SACVC,MAAO,CAAEC,OAAQ,MACbb,KAxBK,EA2ByBc,oBAAS,GA3BlC,mBA2BNC,EA3BM,KA2BOC,EA3BP,KA6Bb,OACE,cAACC,EAAA,EAAD,CAASC,MA7BG,CACZC,OAAQ,CACNC,OAAQ,CACNC,MAAO,WAETC,KAAM,CACJC,OAAQ,SACRC,KAAM,OACNC,OAAQ,UAqBWC,MAAI,EAA3B,SACE,cAACC,EAAA,EAAkBC,SAAnB,UACG,SAACJ,GAAD,OACC,eAACvB,EAAA,EAAD,CAAK4B,MAAI,EAAT,UACE,eAAC9B,EAAD,WACE,cAAC+B,EAAA,EAAD,CAASC,MAAM,IAAIC,OAAO,OAA1B,oBAGA,cAACC,EAAA,EAAD,CACEC,KAAM,cAACC,EAAA,EAAD,IACNC,QAAS,kBAAMpB,GAAgBD,SAGnC,eAACd,EAAA,EAAD,CAAKE,UAAU,MAAMkC,MAAI,EAACC,SAAU,CAAEC,WAAY,UAAlD,UACE,cAACtC,EAAA,EAAD,CAAKoC,MAAI,EAACjC,MAAM,SAASC,QAAQ,SAAjC,sBAGEU,GAAwB,UAATS,EAcf,eAACgB,EAAA,EAAD,WACE,cAACvC,EAAA,EAAD,CACEK,WAAW,UACXJ,IAAI,SACJG,QAAQ,MACRD,MAAM,SACND,UAAU,MALZ,SAOE,cAAC8B,EAAA,EAAD,CACEC,KAAM,cAACO,EAAA,EAAD,IACNL,QAAS,kBAAMpB,GAAe,QAGlC,cAACf,EAAA,EAAD,CACE4B,MAAI,EACJvB,WAAW,UACXF,MAAM,SACNC,QAAQ,SAJV,wBA1BF,cAACqC,EAAA,EAAD,CAAavC,UAAU,aAAawC,KAAM5B,EAA1C,SACE,cAACd,EAAA,EAAD,CACEoC,MAAI,EACJO,MAAM,SACNtC,WAAW,UACXK,UAAU,QACVP,MAAM,SACNC,QAAQ,SANV,mCCjDHwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd1078d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Collapsible,\n  Heading,\n  Grommet,\n  Layer,\n  ResponsiveContext,\n} from \"grommet\";\nimport { Notification, FormClose } from \"grommet-icons\";\n\nfunction App() {\n  const theme = {\n    global: {\n      colors: {\n        brand: \"#228BE6\",\n      },\n      font: {\n        family: \"Roboto\",\n        size: \"18px\",\n        height: \"20px\",\n      },\n    },\n  };\n\n  const AppBar = (props) => (\n    <Box\n      tag=\"header\"\n      direction=\"row\"\n      align=\"center\"\n      justify=\"between\"\n      background=\"brand\"\n      pad={{ left: \"medium\", right: \"small\", vertical: \"small\" }}\n      elevation=\"medium\"\n      style={{ zIndex: \"1\" }}\n      {...props}\n    />\n  );\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  return (\n    <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n        {(size) => (\n          <Box fill>\n            <AppBar>\n              <Heading level=\"3\" margin=\"none\">\n                My App\n              </Heading>\n              <Button\n                icon={<Notification />}\n                onClick={() => setShowSidebar(!showSidebar)}\n              />\n            </AppBar>\n            <Box direction=\"row\" flex overflow={{ horizontal: \"hidden\" }}>\n              <Box flex align=\"center\" justify=\"center\">\n                app body\n              </Box>\n              {!showSidebar || size !== \"small\" ? (\n                <Collapsible direction=\"horizontal\" open={showSidebar}>\n                  <Box\n                    flex\n                    width=\"medium\"\n                    background=\"light-2\"\n                    elevation=\"small\"\n                    align=\"center\"\n                    justify=\"center\"\n                  >\n                    sidebar\n                  </Box>\n                </Collapsible>\n              ) : (\n                <Layer>\n                  <Box\n                    background=\"light-2\"\n                    tag=\"header\"\n                    justify=\"end\"\n                    align=\"center\"\n                    direction=\"row\"\n                  >\n                    <Button\n                      icon={<FormClose />}\n                      onClick={() => setShowSidebar(false)}\n                    />\n                  </Box>\n                  <Box\n                    fill\n                    background=\"light-2\"\n                    align=\"center\"\n                    justify=\"center\"\n                  >\n                    sidebar\n                  </Box>\n                </Layer>\n              )}\n            </Box>\n          </Box>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}